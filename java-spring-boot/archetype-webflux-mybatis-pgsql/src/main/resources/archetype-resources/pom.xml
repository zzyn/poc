<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
    </parent>

    <groupId>${groupId}</groupId>
    <artifactId>${rootArtifactId}-parent</artifactId>
    <name>${project.artifactId}</name>
    <version>${version}</version>
    <packaging>pom</packaging>

    <modules>
        <module>${rootArtifactId}-app</module>
        <module>${rootArtifactId}-contract</module>
        <module>${rootArtifactId}-core</module>
        <module>${rootArtifactId}-coverage</module>
        <module>${rootArtifactId}-docker</module>
        <module>${rootArtifactId}-domain</module>
        <module>${rootArtifactId}-domain-impl</module>
        <module>${rootArtifactId}-repository</module>
        <module>${rootArtifactId}-repository-impl</module>
    </modules>

    <properties>
        <!-- encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- jdk -->
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- build -->
        <fat.jar.name>${rootArtifactId}-${project.version}-fat</fat.jar.name>
        <exec.mainClass>com.eflabs.${rootArtifactId}.app.Application</exec.mainClass>
        <!-- docker -->
        <docker.image.prefix>${project.groupId}</docker.image.prefix>
        <!-- testing -->
        <junit.version>4.12</junit.version>
        <mockito.version>2.22.0</mockito.version>
        <!-- database -->
        <postgresql>9.1-901-1.jdbc4</postgresql>
        <com.zaxxer.hikaricp>3.2.0</com.zaxxer.hikaricp>
        <com.alibaba.druid>1.1.0</com.alibaba.druid>
        <org.mybatis.spring.boot>1.3.2</org.mybatis.spring.boot>
        <org.mybatis>1.0.2</org.mybatis>
        <!-- json -->
        <com.fasterxml.jackson.core>2.9.6</com.fasterxml.jackson.core>
        <!-- jwt -->
        <io.jsonwebtoken>0.10.5</io.jsonwebtoken>
        <org.bouncycastle>1.60</org.bouncycastle>
        <!-- swagger2 api doc -->
        <io.springfox>3.0.0-SNAPSHOT</io.springfox>
        <!-- common lang -->
        <org.apache.commons.lang>3.8.1</org.apache.commons.lang>
        <!-- plugins -->
        <com.spotify>1.0.0</com.spotify>
        <!-- Open Clover Coverage -->
        <!-- These coverage properties need to be overwritten where applicable -->
        <clover.target.line.percentage>0%</clover.target.line.percentage>
        <clover.target.conditional.percentage>0%</clover.target.conditional.percentage>
        <clover.version>4.3.1</clover.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- project -->
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-contract</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-core</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-domain</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-domain-impl</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-repository</artifactId>
                <version>${version}</version>
            </dependency>
            <dependency>
                <groupId>${groupId}</groupId>
                <artifactId>${rootArtifactId}-repository-impl</artifactId>
                <version>${version}</version>
            </dependency>
            <!-- swagger2 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${io.springfox}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${io.springfox}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-spring-webflux</artifactId>
                <version>${io.springfox}</version>
            </dependency>
            <!-- commons language -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${org.apache.commons.lang}</version>
            </dependency>
            <!-- json -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${com.fasterxml.jackson.core}</version>
            </dependency>
            <dependency>
                <groupId>com.github.joschi.jackson</groupId>
                <artifactId>jackson-datatype-threetenbp</artifactId>
                <version>${com.github.joschi.jackson}</version>
            </dependency>
            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${io.jsonwebtoken}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${io.jsonwebtoken}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${io.jsonwebtoken}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- encrypt/decrypt pki -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${org.bouncycastle}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${org.bouncycastle}</version>
            </dependency>
            <!-- database -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${com.alibaba.druid}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${com.zaxxer.hikaricp}</version>
            </dependency>
            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${org.mybatis.spring.boot}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-typehandlers-jsr310</artifactId>
                <version>${org.mybatis}</version>
            </dependency>
            <!-- test -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- Log4j2 Support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- Log4j2 Async Support -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.3.6</version>
        </dependency>
        <!-- redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>redis.clients</groupId>
                    <artifactId>jedis</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>
        <!-- dev tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- common lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- json -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <!-- database -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${com.spotify}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.openclover</groupId>
                <artifactId>clover-maven-plugin</artifactId>
                <version>${clover.version}</version>
                <configuration>
                    <targetPercentage>${clover.target.line.percentage}</targetPercentage>
                    <conditionalPercentage>${clover.target.conditional.percentage}</conditionalPercentage>
                    <generatePdf>true</generatePdf>
                    <generateHtml>true</generateHtml>
                    <!-- we use a single Database which will be used for recording coverage -->
                    <snapshot>${project.basedir}/../target/clover/clover.db</snapshot>
                    <singleCloverDatabase>true</singleCloverDatabase>
                    <!-- Output directory for Reporting -->
                    <outputDirectory>${project.basedir}/../${rootArtifactId}-coverage/target/clover-report</outputDirectory>
                    <!-- Exclude Test sources from instrumention and hence coverage -->
                    <includesTestSourceRoots>true</includesTestSourceRoots>
                </configuration>
                <executions>
                    <execution>
                        <id>clover</id>
                        <phase>package</phase>
                        <goals>
                            <goal>instrument</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- This is needed for Forking during unit tests which is required by Code Coverage Agents.
                    Newer Versions cause problem and this seems to be a common solution on the Internet -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
            </plugin>
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
        <repository>
            <id>nexus3-cn-ef</id>
            <url>https://nexus3-cn.englishtown.com/repository/maven-releases/</url>
        </repository>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
        <pluginRepository>
            <id>nexus3-cn-ef</id>
            <url>https://nexus3-cn.englishtown.com/repository/maven-releases</url>
        </pluginRepository>
    </pluginRepositories>
</project>