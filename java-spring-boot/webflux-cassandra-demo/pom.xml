<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.RELEASE</version>
	</parent>
	<groupId>com.ef.edtech.platform</groupId>
	<artifactId>webflux-cassandra-demo</artifactId>
	<version>1.0.0</version>
	<name>webflux-cassandra-demo</name>
	<description>Cassandra project for Spring Boot</description>

	<properties>
		<!-- encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- jdk -->
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<!-- testing -->
		<junit.version>4.12</junit.version>
		<mockito.version>2.22.0</mockito.version>
		<!-- json -->
		<com.fasterxml.jackson.core>2.11.2</com.fasterxml.jackson.core>
		<!-- async logging -->
		<com.lmax>3.3.6</com.lmax>
		<!-- jwt -->
		<io.jsonwebtoken>0.10.5</io.jsonwebtoken>
		<org.bouncycastle>1.60</org.bouncycastle>
		<!-- swagger api doc -->
		<io.springfox>3.0.0</io.springfox>
		<!-- common lang -->
		<org.apache.commons.lang>3.8.1</org.apache.commons.lang>
		<!-- map struct -->
		<mapstruct.version>1.3.0.Final</mapstruct.version>
		<mapstruct.version>1.3.0.Final</mapstruct.version>
		<!-- plugins -->
		<com.spotify>1.0.0</com.spotify>
		<resource.delimiter>@</resource.delimiter>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<docker-maven-plugin.version>0.30.0</docker-maven-plugin.version>
		<git-commit-id-plugin.version>3.0.1</git-commit-id-plugin.version>
		<jacoco.version>0.8.4</jacoco.version>
		<sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
		<!-- build -->
		<build.mainClass>replace.with.project.entry.class</build.mainClass>
		<!-- nexus3 -->
		<nexus3.baseUrl>http://10.178.86.135</nexus3.baseUrl>
		<!-- testing -->
		<test.reports.dir>target/test-reports</test.reports.dir>
		<test.exclusion.files>**/core/**,**/domain/**,**/config/**,**/api/admin/**,**/Application.class</test.exclusion.files>
		<!-- jacoco -->
		<jacoco.dataFile>target/jacoco.exec</jacoco.dataFile>
		<jacoco.outputDirectory>target/coverage-report</jacoco.outputDirectory>
		<jacoco.line.coverage>50%</jacoco.line.coverage>
		<jacoco.branch.coverage>50%</jacoco.branch.coverage>
		<!-- sonar -->
		<sonar.host.url>http://10.178.86.164</sonar.host.url>
		<sonar.login>4dcea6c14ffedbbc0d4b1a0cccac9f1e4c214ae2</sonar.login>
		<sonar.language>java</sonar.language>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${jacoco.dataFile}</sonar.jacoco.reportPath>
		<sonar.exclusions>${test.exclusion.files}</sonar.exclusions>
		<sonar.coverage.exclusions>${test.exclusion.files}</sonar.coverage.exclusions>

	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- swagger2 -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${io.springfox}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${io.springfox}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-spring-webflux</artifactId>
				<version>${io.springfox}</version>
			</dependency>
			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${com.lmax}</version>
			</dependency>
			<!-- commons language -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${org.apache.commons.lang}</version>
			</dependency>
			<!-- json -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${com.fasterxml.jackson.core}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${com.fasterxml.jackson.core}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${com.fasterxml.jackson.core}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${com.fasterxml.jackson.core}</version>
			</dependency>
			<dependency>
				<groupId>com.github.joschi.jackson</groupId>
				<artifactId>jackson-datatype-threetenbp</artifactId>
				<version>${com.github.joschi.jackson}</version>
			</dependency>
			<!-- jwt -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-api</artifactId>
				<version>${io.jsonwebtoken}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-impl</artifactId>
				<version>${io.jsonwebtoken}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-jackson</artifactId>
				<version>${io.jsonwebtoken}</version>
				<scope>runtime</scope>
			</dependency>
			<!-- encrypt/decrypt pki -->
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${org.bouncycastle}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${org.bouncycastle}</version>
			</dependency>
			<!-- jacoco -->
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<version>${jacoco.version}</version>
				<classifier>runtime</classifier>
			</dependency>
			<!-- mapstruct -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<!-- test -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Log4j2 Support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- Log4j2 Async Support -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
		</dependency>
		<!-- web flux -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<exclusions>
				<exclusion>
					<groupId>redis.clients</groupId>
					<artifactId>jedis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
			<exclusions>
				<exclusion>
					<groupId>redis.clients</groupId>
					<artifactId>jedis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- cassandra -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-cassandra-reactive</artifactId>
		</dependency>

		<!-- apache commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>

		<!-- swagger3 for web flux -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-spring-webflux</artifactId>
		</dependency>

		<!-- json -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<!-- jwt -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Uncomment this next dependency if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms: -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
		</dependency>
		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- for Model Mapper support -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!-- build thin-jar -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<mainClass>${build.mainClass}</mainClass>
						<layout>ZIP</layout>
						<includes>
							<include>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
							</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>build-info</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- copy dependencies -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<phase>compile</phase>
							<configuration>
								<includeScope>runtime</includeScope>
								<outputDirectory>${project.basedir}/target/libs</outputDirectory>
								<stripVersion>true</stripVersion>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- attach sources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- unit test -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<reportsDirectory>${test.reports.dir}</reportsDirectory>
					</configuration>
				</plugin>
				<!-- integration test -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<reportsDirectory>${test.reports.dir}</reportsDirectory>
					</configuration>
				</plugin>
				<!-- setup/clean integration test environment -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-it-env</id>
							<goals>
								<goal>start</goal>
							</goals>
							<configuration>
								<images>
									<image>
										<external>
											<type>compose</type>
											<basedir>src/test/resources</basedir>
											<composeFile>test-compose.yaml</composeFile>
										</external>
										<run>
											<wait>
												<time>5000</time>
											</wait>
										</run>
									</image>
								</images>
							</configuration>
						</execution>
						<execution>
							<id>clean-it-env</id>
							<goals>
								<goal>stop</goal>
								<goal>remove</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- setup git-commit-id-plugin to show commit id in actuator/info -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<configuration>
						<excludeProperties>
							<!-- There is a problem with this plugin with JDK 11 and Intellij 2019.2.4 -->
							<!--  This solves it and the actuator info still works -->
							<!-- https://github.com/git-commit-id/maven-git-commit-id-plugin/issues/421 -->
							<excludeProperty>^git.local.branch.*$</excludeProperty>
						</excludeProperties>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<tagNameFormat>v@{project.version}</tagNameFormat>
					</configuration>
				</plugin>
				<!-- code coverage -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<dataFile>${jacoco.dataFile}</dataFile>
						<outputDirectory>${jacoco.outputDirectory}</outputDirectory>
						<excludes>
							${test.exclusion.files}
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-instrument</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>generate-report</id>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>check-coverage</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.line.coverage}</minimum>
											</limit>
											<limit>
												<counter>BRANCH</counter>
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.branch.coverage}</minimum>
											</limit>
											<limit>
												<counter>CLASS</counter>
												<value>MISSEDCOUNT</value>
												<minimum>0</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- sonarqube -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- embed git-commit info -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<!--maven compiler plugin-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!--build thin-jar-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- copy dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<!-- unit test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- integration test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<!-- code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<!-- sonarqube -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<finalName>webflux-cassandra-demo</finalName>
	</build>

</project>
